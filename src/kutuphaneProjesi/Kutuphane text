-----------------------------------------------KUTUPHANE PROJESI---------------------------------------------

1. Sınıf Tasarımı:
   - Kitap (Book) Sınıfı:
     - Özellikler: kitapAdi, yazar, yayinevi, isbn (Bir kitabın benzersiz kimliğini temsil eden sayısal değer),
      yayinTarihi, kitapTuru (roman, bilim kurgu, tarih vb. gibi).
     - Metotlar: Getter ve Setter metotları ile kitap özelliklerine erişim sağlayın.

   - Kütüphane (Library) Sınıfı:
     - Özellikler: Kitapları saklamak için mevcutKitapList.
     - Metotlar:
       - Kitap eklemek için bir "kitapEkle" metodu.
       - Kitap silmek için bir "kitapSil" metodu.
       - Kütüphanedeki tüm kitapları listelemek için bir "kitapListele" metodu.
       - Belirli bir kitabı aramak için bir "kitapAra" metodu.

   - Öğrenci (Student) Sınıfı:
     - Özellikler: ogrenciAdi, ogrenciNo,OdunckitaplarLİst.
     - Metotlar: Getter ve Setter metotları ile öğrenci özelliklerine erişim sağlayın.

2. Kalıtım İlişkileri:
   - Kitap sınıfı, nesnelerinin ortak özelliklerini tanımlamak için kullanılır.
   - Öğrenci sınıfı, kütüphane sistemine dahil edilecek olan kullanıcıları temsil eder. İlgili nesnelerin özelliklerini belirlemek için kullanılır.

3. Proje Adımları:

   Adım 1: Kitap Sınıfı Oluşturma
   - Kitap sınıfını oluşturun ve yukarıda bahsedilen özellikleri ekleyin.

   Adım 2: Kütüphane Sınıfı Oluşturma
   - Kütüphane sınıfını oluşturun  ve kitapları saklamak için bir ArrayList bulunur.
   - Kitap eklemek, silmek, listelemek, aramak ve var olup olmadığını kontrol etmek için gerekli metotları ekleyin.

   Adım 3: Öğrenci Sınıfı Oluşturma
   - Öğrenci sınıfını oluşturun ve öğrenci adı ve öğrenci numarası gibi özellikleri ekleyin.

   Adım 4: Ana Program (Main) Oluşturma
   - Ana programda, kullanıcı girişine göre Öğrenci işlemleri ve Kütüphane işlemlerine yönledirilir.
   - Menü seçeneklerini kullanıcı girişi ve döngülerle işleyin.
   - Öğrenci işlemlerinde ,öğrenci eklemek, kitap ödünç almak,kitap iade etmek, ödünç kitapları listelemek ve kitap aramak gibi seçenekleri sunan bir menü oluşturun.
   - Kullanıcı girişine göre ilgili sınıf ve metotları çağırarak kütüphane işlemlerini gerçekleştirin.
   - try-catch yapısını kullanarak hatalı girişlere karşı programın çökmesini önleyin ve kullanıcıya uygun mesajlar verin.
